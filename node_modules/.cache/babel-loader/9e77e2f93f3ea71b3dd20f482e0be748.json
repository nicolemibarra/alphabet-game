{"ast":null,"code":"var _jsxFileName = \"/Users/Nicole/Desktop/alphabet-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nimport Sound from 'react-sound';\nimport Asound from './components/mp3/a.mp3';\nimport Bsound from './components/mp3/b.mp3';\nimport Csound from './components/mp3/c.mp3';\nimport Dsound from './components/mp3/d.mp3';\nimport Esound from './components/mp3/e.mp3';\nimport Fsound from './components/mp3/f.mp3';\nimport Gsound from './components/mp3/g.mp3';\nimport Hsound from './components/mp3/h.mp3';\nimport Isound from './components/mp3/i.mp3';\nimport Jsound from './components/mp3/j.mp3';\nimport Ksound from './components/mp3/k.mp3';\nimport Lsound from './components/mp3/l.mp3';\nimport Msound from './components/mp3/m.mp3';\nimport Nsound from './components/mp3/n.mp3';\nimport Osound from './components/mp3/o.mp3';\nimport Psound from './components/mp3/p.mp3';\nimport Qsound from './components/mp3/q.mp3';\nimport Rsound from './components/mp3/r.mp3';\nimport Ssound from './components/mp3/s.mp3';\nimport Tsound from './components/mp3/t.mp3';\nimport Usound from './components/mp3/u.mp3';\nimport Vsound from './components/mp3/v.mp3';\nimport Wsound from './components/mp3/w.mp3';\nimport Xsound from './components/mp3/x.mp3';\nimport Ysound from './components/mp3/y.mp3';\nimport Zsound from './components/mp3/z.mp3';\nconst soundArray = [Asound, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3, MyMp3];\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\n;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      currentScore: 0,\n      topScore: 0,\n      rightWrong: \"\",\n      clicked: [],\n      sound: null,\n      status: Sound.status.PLAYING\n    };\n\n    this.handleClick = id => {\n      this.setState({\n        sound: React.createElement(Sound, {\n          url: soundArray[friends[id].sound],\n          playStatus: Sound.status.PLAYING,\n          playFromPosition: 100\n          /* in milliseconds */\n          ,\n          onLoading: this.handleSongLoading,\n          onPlaying: this.handleSongPlaying,\n          onFinishedPlaying: this.handleSongFinishedPlaying,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        })\n      });\n\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id)\n        });\n      } else {\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        rightWrong: \"You are correct!\"\n      });\n\n      if (newScore >= this.state.topScore) {\n        this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 26) {\n        this.setState({\n          rightWrong: \"You are correct!\"\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        topScore: this.state.topScore,\n        rightWrong: \"Try again!\",\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffledFriends = shuffleFriends(friends);\n      this.setState({\n        friends: shuffledFriends\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.sound, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      title: \"Alphabet Game\",\n      score: this.state.currentScore,\n      topScore: this.state.topScore,\n      rightWrong: this.state.rightWrong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"To start click the letter A and end with the letter Z. Be sure to only click each letter once!\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(Column, {\n      key: friend.id,\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(FriendCard, {\n      key: friend.id,\n      handleClick: this.handleClick,\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleShuffle: this.handleShuffle,\n      id: friend.id,\n      image: friend.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nicole/Desktop/alphabet-game/src/App.js"],"names":["React","Component","FriendCard","Nav","Wrapper","Title","Container","Row","Column","friends","Sound","Asound","Bsound","Csound","Dsound","Esound","Fsound","Gsound","Hsound","Isound","Jsound","Ksound","Lsound","Msound","Nsound","Osound","Psound","Qsound","Rsound","Ssound","Tsound","Usound","Vsound","Wsound","Xsound","Ysound","Zsound","soundArray","MyMp3","shuffleFriends","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","rightWrong","clicked","sound","status","PLAYING","handleClick","id","setState","handleSongLoading","handleSongPlaying","handleSongFinishedPlaying","indexOf","handleIncrement","concat","handleReset","newScore","handleShuffle","shuffledFriends","render","map","friend","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport friends from \"./friends.json\";\nimport \"./App.css\";\nimport Sound from 'react-sound';\nimport Asound from './components/mp3/a.mp3';\nimport Bsound from './components/mp3/b.mp3';\nimport Csound from './components/mp3/c.mp3';\nimport Dsound from './components/mp3/d.mp3';\nimport Esound from './components/mp3/e.mp3';\nimport Fsound from './components/mp3/f.mp3';\nimport Gsound from './components/mp3/g.mp3';\nimport Hsound from './components/mp3/h.mp3';\nimport Isound from './components/mp3/i.mp3';\nimport Jsound from './components/mp3/j.mp3';\nimport Ksound from './components/mp3/k.mp3';\nimport Lsound from './components/mp3/l.mp3';\nimport Msound from './components/mp3/m.mp3';\nimport Nsound from './components/mp3/n.mp3';\nimport Osound from './components/mp3/o.mp3';\nimport Psound from './components/mp3/p.mp3';\nimport Qsound from './components/mp3/q.mp3';\nimport Rsound from './components/mp3/r.mp3';\nimport Ssound from './components/mp3/s.mp3';\nimport Tsound from './components/mp3/t.mp3';\nimport Usound from './components/mp3/u.mp3';\nimport Vsound from './components/mp3/v.mp3';\nimport Wsound from './components/mp3/w.mp3';\nimport Xsound from './components/mp3/x.mp3';\nimport Ysound from './components/mp3/y.mp3';\nimport Zsound from './components/mp3/z.mp3';\n\n\nconst soundArray = [\n  Asound,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3,\n  MyMp3\n \n ]\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  state = {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: [],\n    sound: null,\n    status: Sound.status.PLAYING\n  };\n\n  handleClick = id => {\n    this.setState({\n      sound: <Sound\n      url={soundArray[friends[id].sound]}\n      playStatus={Sound.status.PLAYING}\n      playFromPosition={100 /* in milliseconds */}\n      onLoading={this.handleSongLoading}\n      onPlaying={this.handleSongPlaying}\n      onFinishedPlaying={this.handleSongFinishedPlaying}\n    />\n    })\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: \"You are correct!\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 26) {\n      this.setState({ rightWrong: \"You are correct!\" });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      rightWrong: \"Try again!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledFriends = shuffleFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n\n  \n\n  render() {\n    return (\n      <div>\n        {this.state.sound}\n      <Wrapper>\n        <Nav\n          title=\"Alphabet Game\"\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          rightWrong={this.state.rightWrong}\n        />\n\n        <Title>\n          To start click the letter A and end with the letter Z. Be sure to only click each letter once!\n        </Title>\n\n        <Container>\n          <Row>\n            {this.state.friends.map(friend => (\n              <Column key={friend.id} size=\"md-3 sm-6\">\n                <FriendCard\n                  key={friend.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={friend.id}\n                  image={friend.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}