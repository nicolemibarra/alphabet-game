{"ast":null,"code":"var _jsxFileName = \"/Users/Nicole/Desktop/alphabet-game/src/App.js\";\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard/index\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport friends from \"./friends.js\";\nimport \"./App.css\";\nimport Sound from 'react-sound';\nimport swal from 'sweetalert';\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\n;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      friends,\n      currentScore: 0,\n      topScore: 0,\n      rightWrong: \"\",\n      clicked: [],\n      sound: null,\n      status: Sound.status.PLAYING,\n      currentId: 0\n    };\n\n    this.handleClick = (id, sound) => {\n      if (this.state.currentId === id) {\n        var audio = new Audio(sound);\n        audio.play();\n        console.log(\"correct\");\n        let increaseCurrentId = this.state.currentId + 1;\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id),\n          currentId: increaseCurrentId\n        });\n      } else {\n        swal(\"Oopsie\", \"Incorrect order. Try again please.\", \"error\");\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        rightWrong: \"You are correct!\"\n      });\n\n      if (newScore >= this.state.topScore) {\n        this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 26) {\n        this.setState({\n          rightWrong: swal(\"Oopsie\", \"Incorrect order. Try again please.\", \"error\")\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        topScore: this.state.topScore,\n        // rightWrong: \"Try again!\",\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffledFriends = shuffleFriends(friends);\n      this.setState({\n        friends: shuffledFriends\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.sound, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      title: \"Alphabet Game\",\n      score: this.state.currentScore,\n      topScore: this.state.topScore,\n      rightWrong: this.state.rightWrong,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"To start click the letter A and end with the letter Z. Be sure to only click each letter once!\"), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.friends.map(friend => React.createElement(Column, {\n      key: friend.id,\n      size: \"md-2 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FriendCard, {\n      key: friend.id,\n      handleClick: this.handleClick,\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleShuffle: this.handleShuffle,\n      id: friend.id,\n      image: friend.image,\n      sound: friend.sound,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Nicole/Desktop/alphabet-game/src/App.js"],"names":["React","Component","FriendCard","Nav","Wrapper","Title","Container","Row","Column","friends","Sound","swal","shuffleFriends","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","rightWrong","clicked","sound","status","PLAYING","currentId","handleClick","id","audio","Audio","play","console","log","increaseCurrentId","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledFriends","render","map","friend","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard/index\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport friends from \"./friends.js\";\nimport \"./App.css\";\nimport Sound from 'react-sound';\nimport swal from 'sweetalert';\n\n\n\nfunction shuffleFriends(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  state = {\n    friends,\n    currentScore: 0,\n    topScore: 0,\n    rightWrong: \"\",\n    clicked: [],\n    sound: null,\n    status: Sound.status.PLAYING,\n    currentId: 0,\n  };\n\n  handleClick = (id,sound) => {\n    \n    if (this.state.currentId === id){ \n      var audio = new Audio(sound);\n      audio.play();\n      console.log (\"correct\")\n        let increaseCurrentId = this.state.currentId +1;\n        this.handleIncrement();\n        this.setState({ clicked: this.state.clicked.concat(id), currentId:increaseCurrentId });\n      }  \n    else {\n      swal(\"Oopsie\", \"Incorrect order. Try again please.\", \"error\")\n      this.handleReset()\n  }  \n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      rightWrong: \"You are correct!\"\n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 26) {\n      this.setState({ rightWrong: swal(\"Oopsie\", \"Incorrect order. Try again please.\", \"error\") });\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      // rightWrong: \"Try again!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledFriends = shuffleFriends(friends);\n    this.setState({ friends: shuffledFriends });\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.sound}\n      <Wrapper>\n        <Nav\n          title=\"Alphabet Game\"\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          rightWrong={this.state.rightWrong}\n        />\n\n        <Title>\n          To start click the letter A and end with the letter Z. Be sure to only click each letter once!\n        </Title>\n\n        <Container fluid={true}>\n          <Row>\n            {this.state.friends.map(friend => (\n              <Column key={friend.id} size=\"md-2 sm-6\">\n                <FriendCard\n                  key={friend.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={friend.id}\n                  image={friend.image}\n                  sound={friend.sound}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}